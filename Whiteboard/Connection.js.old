Ext.define('Whiteboard.Connection',{
    socket : 'undefined',
    whiteboard: 'undefined',
    singlePath: [],
    currentPathLength: 0,
    
    constructor: function(address, whiteboard){
        this.socket = io.connect(address);
        this.whiteboard = whiteboard;
        
        this.socket.on('draw', this.remoteDraw);
        this.socket.on('draw-many', this.remoteDrawMany);
        this.socket.on('clear', this.remoteClear);
        this.socket.on('made-video', this.remoteMadeVideo);
        this.socket.on('saved-canvas', this.remoteSavedCanvas);        
    },
    
    send : function (data){
        this.singlePath.push(data);
        this.currentPathLength ++;
        if(this.currentPathLength > 2){
            this.socket.emit('drawClick', {
                singlePath: this.singlePath,
            });
            this.singlePath = [];
            this.currentPathLength = 0;
        }
    },
    
    init: function(uid, roomName){
        this.socket.emit('init', {
            uid : uid,
            roomName: roomName,
        }); 
    },
    
    remoteDraw: function(input){
        var sPath = input.singlePath;
        var data = {};
        for(d in sPath){
            data = sPath[d];
            if(data == null)
                continue;
            this.whiteboard.setParams(data.lineColor, data.lineWidth);
            if(data.type == 'touchstart')
                this.whiteboard.startPath(data.x, data.y);
            else if(data.type == 'touchmove')
                this.whiteboard.continuePath(data.x, data.y);
            else if(data.type == 'touchend')
                this.whiteboard.endPath(data.x, data.y);
        }
        return;
    },
    
    remoteDrawMany: function(data){
        this.whitebaord.clear();
        ds = data.datas;
        for(d in ds){
            if(ds[d] === null) continue;
            this.whiteboard.setParams(ds[d].lineColor, ds[d].lineWidth);
            if(ds[d].type == 'touchstart')
                this.whiteboard.startPath(ds[d].x, ds[d].y);
            else if(ds[d].type == 'touchmove')
                this.whiteboard.continuePath(ds[d].x, ds[d].y);
            else if(ds[d].type == 'touchend')
                this.whiteboard.endPath(ds[d].x, ds[d].y);
        }
    },
    
    remoteClear: function(data){
        this.whiteboard.clear();
    },
    
    remoteMadeVideo: function(data){
        // Show dialog box to say the video is done, and show download link for video
    },
    
    remoteSavedCanvas: function(data){
        // show dialog box to say that the canvas has been saved
    },
    
    
});