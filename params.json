{"name":"Collabdraw","tagline":"HTML5 collaborative whiteboard for tablets","body":"ABOUT:\r\n-------------\r\nCollabdraw is an open-source online whiteboard application built to work on desktops and  tablets\r\nalike. The user interface is HTML5 (using enyojs), and the backend runs on python tornado and redis.\r\n\r\nDEMO:\r\n------------\r\n* [http://collabdraw.herokuapp.com/](http://collabdraw.herokuapp.com/)\r\n\r\nFEATURES:\r\n-------------\r\n1. Works on most tablets out of the box, interface designed for touch interfaces\r\n2. Multiple rooms, pages for collaboration\r\n3. Take quick snapshots of the board\r\n4. Upload pdf and annotate on whiteboard\r\n5. Support for SSL, and authentication\r\n6. Fast, handles lots of users simultaneously\r\n7. **Runs on heroku out of the box!**\r\n\r\nSERVER REQUIREMENTS:\r\n-------------\r\n1. Python 3.2+\r\n2. Redis server\r\n3. All python packages specified in requirements.txt (which might involve installing other\r\nnon-python dependencies like cairo, redis)\r\n4. libpoppler (for pdfseparate), imagemagick (for mogrify) for upload functionality\r\n5. ffmpeg to enable video functionality\r\n\r\nINSTALLATION:\r\n-------------\r\n1. Install all system requirements. If on Ubuntu/Debian do:\r\n```\r\napt-get install python3 redis-server poppler-utils imagemagick ffmpeg python3-pip git pkg-config libcairo2-dev\r\n```\r\n\r\n2. Clone the git repository \r\n```\r\ngit clone git://github.com/anandtrex/collabdraw.git\r\n```   \r\n\r\n3. Initialize submodules to get enyojs libraries.\r\n```\r\ncd collabdraw\r\ngit submodule init\r\ngit submodule update\r\n```\r\n\r\n4. Install python library requirements\r\n```\r\npip-3.2 install virtualenv\r\nvirtualenv venv\r\nsource venv/bin/activate\r\npip install -r requirements.txt\r\n```\r\n\r\n5. Set the hostnames, ports and other options in config.py. Most of the options are explained in the\r\nconfig file. You need the url that points to your redis server, and the url that points to your\r\nwebsocket endpoint\r\n\r\n6. Test if your setup works\r\n```\r\ncollabdraw> ./run_tests.sh\r\n```\r\n    \r\nRUNNING:\r\n-------------\r\n1. Start the redis server (On Ubuntu/Debian, on most setups, this is started automatically on installation)\r\n2. Run `python main.py`\r\n\r\n\r\nHEROKU DEPLOYMENT:\r\n--------------------\r\n1. Create a [heroku](http://heroku.com) account, create an app, and add the \"Redis cloud\" plugin.\r\nInstall heroku toolbelt on your box. Login to heroku with `heroku login`. You can follow the\r\ninstructions on the [heroku quickstart page](https://devcenter.heroku.com/articles/quickstart)\r\n2. Clone the git repository `git clone git://github.com/anandtrex/collabdraw.git && cd collabdraw`\r\n3. Edit config.py to point to your app. If you use the \"Redis cloud\" heroku addon, you can leave the\r\nredis url as it is.\r\n4. Add your app as a remote in git with:\r\n```\r\nheroku git:remote -a <your heroku app name>\r\n```\r\n5. Run `./set_heroku_path.sh` to set the LD_LIBRARY_PATH in your heroku app config to point properly\r\nto ffmpeg\r\n6. Run:\r\n```\r\ngit push heroku master\r\n```\r\n7. Profit!!!\r\n8. You can check your heroku installation by logging into the heroku dynamo with `heroku run bash`, and running `./run_tests.sh`. If this passes, all's good.\r\n\r\n\r\n\r\nNOTES:\r\n-------------\r\n* All rooms are currently \"public\". Anyone registered user can join any room, if they know the room name. Private rooms on the way.\r\n","google":"UA-38877511-1","note":"Don't delete this file! It's used internally to help with page regeneration."}